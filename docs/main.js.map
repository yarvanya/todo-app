{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-todo-item/add-todo-item.component.css","webpack:///./src/app/add-todo-item/add-todo-item.component.html","webpack:///./src/app/add-todo-item/add-todo-item.component.ts","webpack:///./src/app/add-todo-item/search.pipe.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/todo.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/services/todo-data.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div>\\n  <header class=\\\"header\\\">\\n    <h1>Todos:</h1>\\n    <mat-form-field>\\n      <input class=\\\"new-todo\\\" matInput placeholder=\\\"What needs to be done?\\\" [(ngModel)]=\\\"newTodo.title\\\" (keyup.enter)=\\\"addTodo()\\\">\\n    </mat-form-field>\\n    <div *ngIf=\\\"todos.length > 1\\\">\\n      <h3>Search your todo</h3>\\n      <mat-form-field>\\n        <input type=\\\"search\\\" matInput placeholder=\\\"Do you want to find any todos?\\\" [(ngModel)]=\\\"searchText\\\">\\n      </mat-form-field>\\n    </div>\\n  </header>\\n\\n  <section class=\\\"todoapp\\\">\\n\\n    <section class=\\\"main\\\" *ngIf=\\\"todos.length > 0\\\">\\n      <mat-list role=\\\"list\\\">\\n        <mat-list-item *ngFor=\\\"let todo of todos | search : searchText\\\" [class.completed]=\\\"todo.complete\\\" role=\\\"listitem\\\">\\n          <div class=\\\"view\\\">\\n            <mat-checkbox\\n              class=\\\"example-margin\\\"\\n              (change)=\\\"toggleTodoComplete(todo)\\\"\\n              [checked]=\\\"todo.complete\\\">\\n              <label>{{todo.title}}</label>\\n            </mat-checkbox>\\n            <button mat-button color=\\\"warn\\\" (click)=\\\"removeTodo(todo)\\\">Delete todo item</button>\\n          </div>\\n        </mat-list-item>\\n      </mat-list>\\n    </section>\\n\\n    <section class=\\\"todoapp\\\">\\n      <footer class=\\\"footer\\\" *ngIf=\\\"todos.length > 0\\\">\\n        <span class=\\\"todo-count\\\">Total: all: {{todos.length}}, completed: {{complete.length}}</span>\\n      </footer>\\n    </section>\\n\\n  </section>\\n</div>\\n\"","import {Component} from '@angular/core';\nimport {Todo} from '../todo';\nimport {TodoDataService} from '../../services/todo-data.service';\n\n@Component({\n  selector: 'app-add-todo-item',\n  templateUrl: './add-todo-item.component.html',\n  styleUrls: ['./add-todo-item.component.css'],\n  providers: [TodoDataService]\n})\n\nexport class AddTodoItemComponent {\n  newTodo: Todo = new Todo();\n  searchText = '';\n\n  constructor(private todoDataService: TodoDataService) {}\n\n  get todos() {\n    return this.todoDataService.getAllTodos();\n  }\n\n  get complete() {\n    return this.todoDataService.getCompleteTodos();\n  }\n\n  addTodo() {\n    this.todoDataService.addTodo(this.newTodo);\n    this.newTodo = new Todo();\n  }\n\n  toggleTodoComplete(todo) {\n    this.todoDataService.toggleTodoComplete(todo);\n  }\n\n  removeTodo(todo) {\n    this.todoDataService.deleteTodoById(todo.id);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'search'\r\n})\r\n\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(items: any[], searchText: string): any[] {\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n\r\n    searchText = searchText.toLowerCase();\r\n\r\n    return items.filter( it => {\r\n      return it.title.toLowerCase().includes(searchText);\r\n    });\r\n  }\r\n}\r\n","module.exports = \".page-content {\\r\\n  width: 50%;\\r\\n  margin: 0 auto;\\r\\n  text-align: center;\\r\\n  border: 2px solid lightcoral;\\r\\n  background-color: #fafbfc;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"page-content\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  <app-add-todo-item></app-add-todo-item>\\n</div>\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'Todo Application';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule, MatCheckboxModule, MatListModule} from '@angular/material';\n\nimport {AppComponent} from './app.component';\nimport {AddTodoItemComponent} from './add-todo-item/add-todo-item.component';\nimport {SearchPipe} from './add-todo-item/search.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddTodoItemComponent,\n    SearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatListModule,\n    MatCheckboxModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {}\n","export class Todo {\n  id: number;\n  title: string = '';\n  complete: boolean = false;\n\n  constructor(values: Object = {}) {\n    Object.assign(this, values);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import {Injectable} from '@angular/core';\nimport {Todo} from '../app/todo';\n\n@Injectable()\nexport class TodoDataService {\n\n  // Placeholder for last id so we can simulate\n  // automatic incrementing of ids\n  lastId: number = 0;\n\n  // Placeholder for todos\n  todos: Todo[] = [];\n\n  constructor() {\n  }\n\n  // Simulate POST /todos\n  addTodo(todo: Todo): TodoDataService {\n    if (!todo.id) {\n      todo.id = ++this.lastId;\n    }\n    this.todos.push(todo);\n    return this;\n  }\n\n  // Simulate DELETE /todos/:id\n  deleteTodoById(id: number): TodoDataService {\n    this.todos = this.todos\n      .filter(todo => todo.id !== id);\n    return this;\n  }\n\n  // Simulate PUT /todos/:id\n  updateTodoById(id: number, values: Object = {}): Todo {\n    const todo = this.getTodoById(id);\n    if (!todo) {\n      return null;\n    }\n    Object.assign(todo, values);\n    return todo;\n  }\n\n  // Simulate GET /todos\n  getAllTodos(): Todo[] {\n    return this.todos;\n  }\n\n  // Simulate GET /todos/:id\n  getTodoById(id: number): Todo {\n    return this.todos\n      .filter(todo => todo.id === id)\n      .pop();\n  }\n\n  // Toggle todo complete\n  toggleTodoComplete(todo: Todo) {\n    const updatedTodo = this.updateTodoById(todo.id, {\n      complete: !todo.complete\n    });\n    return updatedTodo;\n  }\n\n  getCompleteTodos() {\n    return this.todos.filter((x) => x.complete === true);\n  }\n}\n"],"sourceRoot":""}